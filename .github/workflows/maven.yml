name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.2
      with:
       name: myartifact 
       path: webapp

    - name: Download a Build Artifact
      uses: actions/download-artifact@v4.3.0
      with:
      # Name of the artifact to download. If unspecified, all artifacts for the run are downloaded.
        name: myartifact
    # Destination path. Supports basic tilde expansion. Defaults to $GITHUB_WORKSPACE
        path: webapp

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: ola22/testing:July2025


  scan-with-trivy:

    runs-on: ubuntu-latest
    needs: [build]

    steps:
    - uses: actions/checkout@v4
    - name: install trivy
      run: |
        sudo apt-get install wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy -y

    - name: trivy FS Scan
      run: trivy fs --format table -o fs-report .

    - name: gitleak Installation
      run: sudo apt install gitleaks -y

    - name: Gitleaks Code Scan
      run: gitleaks detect source . -r gitleaks-report.json -f json

    #- name: Sonar Scan
    #  uses: sijomc/sonarscan-action@1.1
    #  with:
    #   host: ${{ vars.SONAR_URL }} 
    #    login: ${{ secrets.SONAR_TOKEN}}

  deploy_to_KUbernetes:

    runs-on: ubuntu-latest
    needs: [build, 'scan-with-trivy']

    steps:
    - uses: actions/checkout@v4
   
    - name: Install AWS CLI
      run: >
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        
        unzip awscliv2.zip
        
        sudo --update ./aws/install 

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4.1.0
      with:
        aws-region: eu-west-2
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_ID }}

    - name: Kubectl set up
      uses: Azure/setup-kubectl@v4.0.0
      with:
        version: latest

    - name: configure kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.EKS_KUBEONFIG }}" > $HOME/.kube/config

    - name: DEploy to EKS
      run: |
        kubectl apply -f ds.yaml

          
          

    
   
    
          
      
